#!/bin/env bash

# Copyright (C) 2024 by Michael Schaecher <mschaecher78@gmail.com> under the MIT License

# This script generates /etc/fstab file for Ubuntu installation with btrfs filesystem
# that uses none Ubuntu default subvolumes.
#
# Gen-FSTab script assumes that system has EFI boot partition.

function subvol () {
	for su in $(btrfs su list "/${mountPoint}" | grep 'level 5' | awk '{print $9}'); do

		test -n "$su" || { echo "No subvolumes found"; exit 1; }

	    test "$su" = "root"      || test "${su}" = "@"          && mountAt="/"
	    test "$su" = "home"      || test "${su}" = "@home"      && mountAt="/home"
	    test "$su" = "cache"     || test "${su}" = "@cache"     && mountAt="/var/cache"
	    test "$su" = "log"       || test "${su}" = "@log"       && mountAt="/var/log"
	    test "$su" = "tmp"       || test "${su}" = "@tmp"       && mountAt="/tmp"
	    test "$su" = "snapshots" || test "${su}" = "@snapshots" && mountAt="/.snapshots"

	    echo "UUID=${fsRoot} $mountAt btrfs ${btrfsOpt},subvol=${su} 0 0"
	done
}

appName="btrfs-fstab"
appVersion="$(cat /usr/share/doc/btrfs-fstab/version || echo "unknown")"

versionInfo="$(cat <<EOF
${appName} - [VERSION] ${appVersion} - $(date +%Y-%m-%d)
EOF
)"

case "${1}" in
	-v|--version			) echo "${versionInfo}" ; exit 0 ;;
esac

test "$(id -u)" -eq 0 || { echo "You must be root to run this script"; exit 1; }

# Test if I'm running in a chroot environment using /proc directory.
! grep -q ' / ' /etc/mtab || { echo "You are not running in a chroot environment"; exit 1; }

# Check if running inside a live environment which is a must.
checks=(
    "grep -q 'boot=casper' /proc/cmdline && break || {
		echo 'Not running in a Live Environment (boot=casper not found in /proc/cmdline)'
	}"
	"mount | grep -q 'overlay ' && break || {
		echo 'Not running in a Live Environment (OverlayFS not detected)'
	}"
	"[ -d /cdrom ] && mount | grep -q '/cdrom' && break || {
		echo 'Not running in a Live Environment (CDROM not detected)'
	}"
	"[ \"\$(findmnt -n -o OPTIONS /)\" = 'ro' ] && {
		echo 'Not running in a Live Environment (Read-only root filesystem)'
	}"

)


mountPoint="$(lsblk -o mountpoint,fstype | grep 'btrfs' | awk '{print $1}')"

fsBoot="$(lsblk -o uuid,fstype | grep 'vfat' | awk '{print $1}')"
fsRoot="$(lsblk -o uuid,fstype | grep 'btrfs' | awk '{print $1}')"
fsSwap="$(lsblk -o uuid,fstype | grep 'swap' | awk '{print $1}')"

btrfsOpt="ssd,noatime,space_cache=v2,compress=lzo"

# Check if running in a live environment
for check in "${checks[@]}"; do eval "${check}" ; done && echo "Running in a Live Environment" || exit 1

# Check if there is no swap partition
test -z "${fsSwap}" && fsSwap="# UUID=" || fsSwap="UUID=${fsSwap}"

# Exit with error if no boot or root partition found
test -z "${fsBoot}" || test -z "${fsRoot}" && { echo "No boot or root partition found"; exit 1; }

# Check if btrfs filesystem is mounted
test -n "${mountPoint}" || { echo "No btrfs filesystem found"; exit 1; }

# The mountPoint should be mounted on /mnt or /media
if test "${mountPoint}" != "/mnt" || test "${mountPoint}" != "/media"; then
	echo "Mount point is not /mnt or /media" ; exit 1
fi

# Generate /etc/fstab file
echo "Generating fstab file ..."

cat <<EOF > "/${mountPoint}/etc/fstab"
# /etc/fstab: static file system information.
#
# This file was automatically generated by gen-fstab script. Please do not edit it manually.

# <file system>    <mount point>    <type>    <options>    <dump>    <pass>

# EFI boot partition
UUID=${fsBoot} /boot/efi vfat defaults 0 1

# Mount btrfs subvolumes
$(subvol)

# Swap partition
${fsSwap}
EOF

# Check if the fstab file was created successfully
test -f "/${mountPoint}/etc/fstab" || { echo "[!] Failed to create fstab file" && exit 1; }

echo "FSTAB file created successfully" ; exit 0
